// Mocks generated by Mockito 5.4.6 from annotations
// in easy_task_app/test/src/domain/use_case/tasks/create_task_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:core/core.dart' as _i4;
import 'package:easy_task_app/domain/model/tasks/easy_task_model.dart' as _i5;
import 'package:easy_task_app/domain/model/tasks/params/create_task_params.dart'
    as _i8;
import 'package:easy_task_app/domain/model/tasks/params/delete_media_params.dart'
    as _i11;
import 'package:easy_task_app/domain/model/tasks/params/edit_task_params.dart'
    as _i9;
import 'package:easy_task_app/domain/model/tasks/params/get_tasks_filter_params.dart'
    as _i6;
import 'package:easy_task_app/domain/model/tasks/params/upload_media_params.dart'
    as _i10;
import 'package:easy_task_app/domain/repository/tasks_repository.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TasksRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTasksRepository extends _i1.Mock implements _i2.TasksRepository {
  MockTasksRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<List<_i5.EasyTaskModel>>> getAllTasks({
    required _i6.GetTasksFiltersParams? filtersParams,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getAllTasks, [], {
              #filtersParams: filtersParams,
            }),
            returnValue: _i3.Future<_i4.Result<List<_i5.EasyTaskModel>>>.value(
              _i7.dummyValue<_i4.Result<List<_i5.EasyTaskModel>>>(
                this,
                Invocation.method(#getAllTasks, [], {
                  #filtersParams: filtersParams,
                }),
              ),
            ),
          )
          as _i3.Future<_i4.Result<List<_i5.EasyTaskModel>>>);

  @override
  _i3.Future<_i4.Result<_i5.EasyTaskModel>> createTask({
    required _i8.CreateTaskParams? params,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createTask, [], {#params: params}),
            returnValue: _i3.Future<_i4.Result<_i5.EasyTaskModel>>.value(
              _i7.dummyValue<_i4.Result<_i5.EasyTaskModel>>(
                this,
                Invocation.method(#createTask, [], {#params: params}),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i5.EasyTaskModel>>);

  @override
  _i3.Future<_i4.Result<void>> updateTask({
    required _i9.EditTaskParams? params,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateTask, [], {#params: params}),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i7.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#updateTask, [], {#params: params}),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<void>> deleteTask({required String? id}) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTask, [], {#id: id}),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i7.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#deleteTask, [], {#id: id}),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<void>> uploadMediaFiles({
    required _i10.UploadMediaParams? params,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#uploadMediaFiles, [], {#params: params}),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i7.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#uploadMediaFiles, [], {#params: params}),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<void>> deleteMediaFile({
    required _i11.DeleteMediaParams? params,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#deleteMediaFile, [], {#params: params}),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i7.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#deleteMediaFile, [], {#params: params}),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<_i5.EasyTaskModel>> getTaskById({
    required String? id,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getTaskById, [], {#id: id}),
            returnValue: _i3.Future<_i4.Result<_i5.EasyTaskModel>>.value(
              _i7.dummyValue<_i4.Result<_i5.EasyTaskModel>>(
                this,
                Invocation.method(#getTaskById, [], {#id: id}),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i5.EasyTaskModel>>);
}
